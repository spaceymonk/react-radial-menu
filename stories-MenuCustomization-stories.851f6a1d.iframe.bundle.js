"use strict";(self.webpackChunk_spaceymonk_react_radial_menu=self.webpackChunk_spaceymonk_react_radial_menu||[]).push([[969],{"./src/stories/MenuCustomization.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{RadialMenuCustomizations:()=>RadialMenuCustomizations,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),_components_Menu__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Menu.tsx"),_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/MenuItem.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Demos",component:_components_Menu__WEBPACK_IMPORTED_MODULE_2__.Z},RadialMenuCustomizations={render:args=>{const wrapperRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{wrapperRef.current&&(wrapperRef.current.style.setProperty("--__reactRadialMenu__menu-bgColor",args.menuBgColor),wrapperRef.current.style.setProperty("--__reactRadialMenu__separator-color",args.separatorColor),wrapperRef.current.style.setProperty("--__reactRadialMenu__item-color",args.itemColor),wrapperRef.current.style.setProperty("--__reactRadialMenu__activeItem-color",args.activeItemColor),wrapperRef.current.style.setProperty("--__reactRadialMenu__activeItem-bgColor",args.activeItemBgColor),wrapperRef.current.style.setProperty("--__reactRadialMenu__arrow-color",args.arrowColor),wrapperRef.current.style.setProperty("--__reactRadialMenu__activeArrow-color",args.activeArrowColor))}),[args.menuBgColor,args.separatorColor,args.itemColor,args.activeItemColor,args.activeItemBgColor,args.arrowColor,args.activeArrowColor]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{className:"demo-wrapper",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("h1",{children:"Radial Menu Customizations"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:"Use Storybook controls to test all customization options."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("strong",{children:"NEW!"})," You can toggle background of the menu. Just click ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("code",{children:"drawBackground"})," in"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("i",{children:"Controls"})," section to see!",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p",{children:"After toggling set these for more beautiful menu:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("ul",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("li",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("code",{children:"innerRadius"})," to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("code",{children:"40"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("li",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("code",{children:"outerRadius"})," to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("code",{children:"150"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("li",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("code",{children:"displayPosition"})," to ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("code",{children:"center"})]})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{style:{display:"flex",justifyContent:"center"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div",{ref:wrapperRef,className:"menu-wrapper",style:{width:2*args.outerRadius+100,height:2*args.outerRadius+100},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_components_Menu__WEBPACK_IMPORTED_MODULE_2__.Z,{animation:args.animation,animationTimeout:args.animationTimeout,animateSubMenuChange:args.animateSubMenuChange,show:args.show,outerRadius:args.outerRadius,innerRadius:args.innerRadius,centerX:args.outerRadius+50,centerY:args.outerRadius+50,theme:"none"===args.themeSelect?void 0:args.themeSelect,drawBackground:args.drawBackground,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_components__WEBPACK_IMPORTED_MODULE_1__.Wd,{data:"More",itemView:"More",displayView:args.displayView,displayPosition:args.displayPosition,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_components__WEBPACK_IMPORTED_MODULE_1__.Wd,{data:"More2",itemView:"More2",displayView:args.displayView,displayPosition:args.displayPosition,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"subsub 1",children:"subsub 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"subsub 2",children:"subsub 2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"subsub 3",children:"subsub 3"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"sub 1",children:"sub 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"sub 2",children:"sub 2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"sub 3",children:"sub 3"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"item 1",children:"item 1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"item 2",children:"item 2"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"item 3",children:"item 3"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"item 4",children:"item 4"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"item 5",children:"item 5"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_components_MenuItem__WEBPACK_IMPORTED_MODULE_3__.Z,{data:"item 6",children:"item 6"})]})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("pre",{children:`.menu-wrapper {\n  --__reactRadialMenu__menu-bgColor: ${args.menuBgColor};\n  --__reactRadialMenu__separator-color: ${args.separatorColor};\n  --__reactRadialMenu__item-color: ${args.itemColor};\n  --__reactRadialMenu__activeItem-color: ${args.activeItemColor};\n  --__reactRadialMenu__activeItem-bgColor: ${args.activeItemBgColor};\n  --__reactRadialMenu__arrow-color: ${args.arrowColor};\n  --__reactRadialMenu__activeArrow-color: ${args.activeArrowColor};\n}`}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("p",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("strong",{children:"Note:"})," The above CSS variables are used to customize the menu. You can use different colors for each menu item, separator, and arrow. You can also use the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("code",{children:"theme"})," prop to set a predefined theme."]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("pre",{children:`\n<Menu\n  animation={${JSON.stringify(args.animation)}}\n  animationTimeout={${args.animationTimeout}}\n  animateSubMenuChange={${args.animateSubMenuChange}}\n  show={${args.show}}\n  outerRadius={${args.outerRadius}}\n  innerRadius={${args.innerRadius}}\n  centerX={${args.outerRadius+50}}\n  centerY={${args.outerRadius+50}}${"none"===args.themeSelect?"":`\n  theme={"${args.themeSelect}"}`}\n>\n  <SubMenu data={"More"} itemView={"More"} displayView={"${args.displayView}"} displayPosition="${args.displayPosition}">\n    <SubMenu data={"More2"} itemView={"More2"} displayView={"${args.displayView}"} displayPosition="${args.displayPosition}">\n      // ... more menu items\n    </SubMenu>\n    // ... more menu items\n  </SubMenu>\n  // ... more menu items\n</Menu>`})]})},argTypes:{centerX:{table:{disable:!0}},centerY:{table:{disable:!0}},animationTimeout:{control:{type:"number"}},animation:{control:{type:"inline-check"},options:["fade","scale","rotate"]},className:{table:{disable:!0}},displayPosition:{options:["top","bottom","left","right","center"],control:{type:"select"}},themeSelect:{control:{type:"inline-radio"},options:["light","dark","none"]},theme:{table:{disable:!0}}},args:{show:!0,drawBackground:!0,animation:[],animationTimeout:300,animateSubMenuChange:!0,innerRadius:75,outerRadius:150,displayPosition:"bottom",displayView:"",themeSelect:"none",menuBgColor:"#fff",separatorColor:"rgba(0, 0, 0, 0.2)",itemColor:"#333",activeItemColor:"#fff",activeItemBgColor:"#3498db",arrowColor:"#6f6e77",activeArrowColor:"#fff"}};RadialMenuCustomizations.parameters={...RadialMenuCustomizations.parameters,docs:{...RadialMenuCustomizations.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const wrapperRef = React.useRef<HTMLDivElement>(null);\n    React.useEffect(() => {\n      if (!wrapperRef.current) return;\n      wrapperRef.current.style.setProperty("--__reactRadialMenu__menu-bgColor", args.menuBgColor);\n      wrapperRef.current.style.setProperty("--__reactRadialMenu__separator-color", args.separatorColor);\n      wrapperRef.current.style.setProperty("--__reactRadialMenu__item-color", args.itemColor);\n      wrapperRef.current.style.setProperty("--__reactRadialMenu__activeItem-color", args.activeItemColor);\n      wrapperRef.current.style.setProperty("--__reactRadialMenu__activeItem-bgColor", args.activeItemBgColor);\n      wrapperRef.current.style.setProperty("--__reactRadialMenu__arrow-color", args.arrowColor);\n      wrapperRef.current.style.setProperty("--__reactRadialMenu__activeArrow-color", args.activeArrowColor);\n    }, [args.menuBgColor, args.separatorColor, args.itemColor, args.activeItemColor, args.activeItemBgColor, args.arrowColor, args.activeArrowColor]);\n    return <div className="demo-wrapper">\n        <h1>Radial Menu Customizations</h1>\n        <p>Use Storybook controls to test all customization options.</p>\n        <div>\n          <strong>NEW!</strong> You can toggle background of the menu. Just click <code>drawBackground</code> in{" "}\n          <i>Controls</i> section to see!\n          <p>After toggling set these for more beautiful menu:</p>\n          <ul>\n            <li>\n              <code>innerRadius</code> to <code>40</code>\n            </li>\n            <li>\n              <code>outerRadius</code> to <code>150</code>\n            </li>\n            <li>\n              <code>displayPosition</code> to <code>center</code>\n            </li>\n          </ul>\n        </div>\n        <div style={{\n        display: "flex",\n        justifyContent: "center"\n      }}>\n          <div ref={wrapperRef} className="menu-wrapper" style={{\n          width: 2 * args.outerRadius + 100,\n          height: 2 * args.outerRadius + 100\n        }}>\n            <Menu animation={args.animation} animationTimeout={args.animationTimeout} animateSubMenuChange={args.animateSubMenuChange} show={args.show} outerRadius={args.outerRadius} innerRadius={args.innerRadius} centerX={args.outerRadius + 50} centerY={args.outerRadius + 50} theme={args.themeSelect === "none" ? undefined : args.themeSelect} drawBackground={args.drawBackground}>\n              <SubMenu data={"More"} itemView={"More"} displayView={args.displayView} displayPosition={args.displayPosition}>\n                <SubMenu data={"More2"} itemView={"More2"} displayView={args.displayView} displayPosition={args.displayPosition}>\n                  <MenuItem data={"subsub 1"}>subsub 1</MenuItem>\n                  <MenuItem data={"subsub 2"}>subsub 2</MenuItem>\n                  <MenuItem data={"subsub 3"}>subsub 3</MenuItem>\n                </SubMenu>\n                <MenuItem data={"sub 1"}>sub 1</MenuItem>\n                <MenuItem data={"sub 2"}>sub 2</MenuItem>\n                <MenuItem data={"sub 3"}>sub 3</MenuItem>\n              </SubMenu>\n              <MenuItem data={"item 1"}>item 1</MenuItem>\n              <MenuItem data={"item 2"}>item 2</MenuItem>\n              <MenuItem data={"item 3"}>item 3</MenuItem>\n              <MenuItem data={"item 4"}>item 4</MenuItem>\n              <MenuItem data={"item 5"}>item 5</MenuItem>\n              <MenuItem data={"item 6"}>item 6</MenuItem>\n            </Menu>\n          </div>\n        </div>\n        <pre>\n          {`.menu-wrapper {\n  --__reactRadialMenu__menu-bgColor: ${args.menuBgColor};\n  --__reactRadialMenu__separator-color: ${args.separatorColor};\n  --__reactRadialMenu__item-color: ${args.itemColor};\n  --__reactRadialMenu__activeItem-color: ${args.activeItemColor};\n  --__reactRadialMenu__activeItem-bgColor: ${args.activeItemBgColor};\n  --__reactRadialMenu__arrow-color: ${args.arrowColor};\n  --__reactRadialMenu__activeArrow-color: ${args.activeArrowColor};\n}`}\n        </pre>\n        <p>\n          <strong>Note:</strong> The above CSS variables are used to customize the menu. You can use different colors\n          for each menu item, separator, and arrow. You can also use the <code>theme</code> prop to set a predefined\n          theme.\n        </p>\n        <pre>\n          {`\n<Menu\n  animation={${JSON.stringify(args.animation)}}\n  animationTimeout={${args.animationTimeout}}\n  animateSubMenuChange={${args.animateSubMenuChange}}\n  show={${args.show}}\n  outerRadius={${args.outerRadius}}\n  innerRadius={${args.innerRadius}}\n  centerX={${args.outerRadius + 50}}\n  centerY={${args.outerRadius + 50}}${args.themeSelect === "none" ? "" : `\\n  theme={"${args.themeSelect}"}`}\n>\n  <SubMenu data={"More"} itemView={"More"} displayView={"${args.displayView}"} displayPosition="${args.displayPosition}">\n    <SubMenu data={"More2"} itemView={"More2"} displayView={"${args.displayView}"} displayPosition="${args.displayPosition}">\n      // ... more menu items\n    </SubMenu>\n    // ... more menu items\n  </SubMenu>\n  // ... more menu items\n</Menu>`}\n        </pre>\n      </div>;\n  },\n  argTypes: {\n    centerX: {\n      table: {\n        disable: true\n      }\n    },\n    centerY: {\n      table: {\n        disable: true\n      }\n    },\n    animationTimeout: {\n      control: {\n        type: "number"\n      }\n    },\n    animation: {\n      control: {\n        type: "inline-check"\n      },\n      options: ["fade", "scale", "rotate"]\n    },\n    className: {\n      table: {\n        disable: true\n      }\n    },\n    displayPosition: {\n      options: ["top", "bottom", "left", "right", "center"],\n      control: {\n        type: "select"\n      }\n    },\n    themeSelect: {\n      control: {\n        type: "inline-radio"\n      },\n      options: ["light", "dark", "none"]\n    },\n    theme: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  args: {\n    show: true,\n    drawBackground: true,\n    animation: [],\n    animationTimeout: 300,\n    animateSubMenuChange: true,\n    innerRadius: 75,\n    outerRadius: 150,\n    displayPosition: "bottom",\n    displayView: "",\n    themeSelect: "none",\n    menuBgColor: "#fff",\n    separatorColor: "rgba(0, 0, 0, 0.2)",\n    itemColor: "#333",\n    activeItemColor: "#fff",\n    activeItemBgColor: "#3498db",\n    arrowColor: "#6f6e77",\n    activeArrowColor: "#fff"\n  }\n}',...RadialMenuCustomizations.parameters?.docs?.source}}};const __namedExportsOrder=["RadialMenuCustomizations"]}}]);